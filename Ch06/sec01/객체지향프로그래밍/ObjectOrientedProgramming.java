package Ch06.sec01.객체지향프로그래밍;

public class ObjectOrientedProgramming {

}
// 객체 : 물리적으로 존재하거나 개념적인 것 중에서 다른 것과 식별 가능한 것
// 객체는 속성과 동작으로 구성
// 각각 필드와 메소드라고 한다
// 객체 모델링 : 현실 세계의 객체를 소프트웨어 객체로 설계하는 것
// 객체의 상호작용 : 객체들이 다른 객체와 서로 상호작용하면서 동작
// 메소드 호출을 통해 객체들은 데이터를 서로 주고받는다
// 매개값 : 메소드가 실행할 때 필요한 값
// 리턴값 : 메소드의 실행의 결과, 호출한 곳으로 돌려주는 값
// 객체 간의 관계 : 집합 관계, 사용 관계, 상속 관계
// 집합 관계 : 완성품과 부품의 관계
// 사용 관계 : 다른 객체의 필드를 읽고 변경하거나 메소드 호출하는 관계
// 상속 관계 : 부모와 자식 관계
// 객체 지향 프로그래밍의 특징
// 캡슐화 : 객체의 데이터, 동작을 하나로 묶고 실제 구현 내용을 외부에 감추는 것
// 상속 : 부모 객체가 가지고 있는 필드와 메소드를 자식 객체에게 물려줘서 사용할 수 있도록 하는 것
// 상속의 이유 : 코드의 재사용성 높여준다
//			   유지 보수 시간을 최소화 시켜준
// 다형성 : 사용방법은 동일하지만 실행 결과가 다양하게 나오는 성질